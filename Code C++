#include <iostream>
#include <string>
#include <vector>


using namespace std;


class Solution {
public:
    int fibonacci(int n) {
        if (n == 0 || n == 1)
            return 1;

        else {

            int sum = (fibonacci(n - 1) + fibonacci(n - 2));
            return sum;
        }
    }
  

    int numDecodings(string s) {

        int count = 0;
       

        vector<int>V; 

        if (s[0] == '0') {
            return 0;
        }
        if ((s.length() == 1) && (s != "0"))
        {
            return 1;
        }

        for (int i = 0; i < s.length() - 1; i++) {
            int check = s[i] - 0x30;
            int check2 = s[i + 1] - 0x30;

            if (check == 0) //check if the "0" can form "10" or "20"
            {

                if ((s[i - 1] == '1' || s[i - 1] == '2') && (check2 != 0))
                {
                    count = 0;
                    continue;
                }

                else { return 0; }
            }

            if (((check * 10 + check2 > 0) && (check * 10 + check2 < 10)) || ((check * 10 + check2 > 10) && (check * 10 + check2 < 20)) || ((check * 10 + check2 > 20) && (check * 10 + check2 <= 26)))
            {
                count++;

            }

            else if ((check2 != 0) && (check * 10 + check2 > 26)) //if the following number                                                                      //breaks the Fibonacci                                                                        //sequence
            {
                if (count != 0)
                {
                    count++;

                    V.push_back(count);
                    count = 0;
                }
               

            }
            if (check2 == 0)    //if the following number is "0"
            {
                if (check == 1 || check == 2) {

                    if (count >= 2)
                    {
                    
                        V.push_back(count);
                        count = 0;
                    }
                   
                }
                else { return 0; }
            }

            check = 0;
            check2 = 0;

        }



        if ((s[s.length() - 1] != '0') && (count != 0)) //checking the last digit
        {
            count++;
        }




        if (count > 0)
        {
            V.push_back(count);
        }

        int res = 1;   
        if (!V.empty()) {    //computing the Fibonacci number

            for (int i = 0; i < V.size(); i++)
            {

                res *= fibonacci(V[i]);
            }
        }

        return res;

    }
};

int main()
{
    string s;
    cin >> s;
    Solution A;
    cout<<A.numDecodings(s);
    
    return 0;
}
